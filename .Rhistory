c1 <- t(t(row.names(data[row_order(ht)[[3]],])))
write.table(c1,"gene_cluster3.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[4]],])))
write.table(c1,"gene_cluster4.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[5]],])))
write.table(c1,"gene_cluster5.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[6]],])))
write.table(c1,"gene_cluster6.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[7]],])))
write.table(c1,"gene_cluster7.csv", sep="\n", quote=F, row.names=F,col.names=F)
data <- read.csv("cluster4-6.csv",header = T,row.names = 1)
gene <- read.csv("cluster4-6.csv",header = T,row.names = 1)
data <- read.csv("gene_TPM_merge_zscore.csv",header = T,row.names = 1)
data<-merge(gene,data,by=0)
write.table(data, file = "cluster4-6.csv", row.names = F, col.names = T, quote = F, sep = ",")
data <- read.csv("cluster4-6.csv",header = T,row.names = 1)
ht = Heatmap(data[1:21], name = "z-score",row_km = 4,column_order = sort(colnames(data[1:21])))
ht
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 3,)
t(t(row.names(data[row_order(ht)[[7]],])))
t(t(row.names(data[row_order(ht)[[1]],])))
t(t(row.names(data[row_order(ht)[[1]],])))
t(t(row.names(data[row_order(ht)[[1]],])))
data <- read.csv("gene_TPM_merge_zscore.csv",header = T,row.names = 1)
data<-na.omit(data)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 3,)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 7)
ht <- Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 7)
head(data)
t(t(row.names(data[row_order(ht)[[1]],])))
t(t(row.names(data[row_order(ht)[[1]],])))
t(t(row.names(data[row_order(ht)[[1]],])))
ht
ht
ht
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 7)
ht <- Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 7)
ht
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
write.table(out, file= "genes_cluster.txt", sep="\t", quote=F, row.names=FALSE)
gene <- read.csv("cluster.csv",header = T,row.names = 1)
setwd("~/Downloads/RNA-seq analysis/BRD4_RNAseq/venn/gene2")
data <- read.csv("gene2_merge_zscore.csv",header = T,row.names = 1)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 3,)
data<-na.omit(data)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 3,)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 7)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 10)
ht <- Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 10)
ht
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
write.table(out, file= "genes_cluster.txt", sep="\t", quote=F, row.names=FALSE)
c1 <- t(t(row.names(data[row_order(ht)[[1]],])))
data <- read.csv("cluster.csv",header = T,row.names = 1)
data <- read.csv("cluster.csv",header = T,row.names = 1)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 10)
data <- read.csv("gene2_merge_zscore.csv",header = T,row.names = 1)
gene <- read.csv("cluster.csv",header = T,row.names = 1)
data <- merge(gene,data,by=0)
write.table(data, file = "cluster.csv", row.names = F, col.names = T, quote = F, sep = ",")
data <- read.csv("cluster.csv",header = T,row.names = 1)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 10)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 8)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 7)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 3)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 10)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 9)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 8)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 7)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 6)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 4)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 5)
pdf("cluster.pdf")
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 5)
dev.off()
pdf("cluster.pdf")
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 5)
dev.off()
pdf("cluster.pdf")
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 5)
dev.off()
ht <- Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 5)
ht
ht
ht
ht
ht
ht
ht
ht
pdf("cluster.pdf")
ht
dev.off()
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
write.table(out, file= "genes_cluster2.txt", sep="\t", quote=F, row.names=FALSE)
c1 <- t(t(row.names(data[row_order(ht)[[1]],])))
write.table(c1,"gene2_cluster1.csv", sep="\n", quote=F, row.names=F,col.names=F)
write.table(c1,"gene2_cluster2.csv", sep="\n", quote=F, row.names=F,col.names=F)
write.table(c1,"gene2_cluster3.csv", sep="\n", quote=F, row.names=F,col.names=F)
write.table(c1,"gene2_cluster4.csv", sep="\n", quote=F, row.names=F,col.names=F)
write.table(c1,"gene2_cluster5.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[1]],])))
write.table(c1,"gene2_cluster1.csv", sep="\n", quote=F, row.names=F,col.names=F)
write.table(c1,"gene2_cluster1.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[2]],])))
write.table(c1,"gene2_cluster2.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[3]],])))
write.table(c1,"gene2_cluster3.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[4]],])))
write.table(c1,"gene2_cluster4.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[5]],])))
write.table(c1,"gene2_cluster5.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[1]],])))
write.table(c1,"gene2_cluster1.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[1]],])))
write.table(c1,"gene2_cluster2.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[1]],])))
write.table(c1,"gene2_cluster3.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[1]],])))
write.table(c1,"gene2_cluster4.csv", sep="\n", quote=F, row.names=F,col.names=F)
c1 <- t(t(row.names(data[row_order(ht)[[1]],])))
write.table(c1,"gene2_cluster5.csv", sep="\n", quote=F, row.names=F,col.names=F)
ht <- Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 5)
ht
r.dend <- row_dend(ht)
rcl.list <- row_order(ht)
lapply(rcl.list, function(x) length(x))
for (i in 1:length(row_order(ht))){ if (i == 1) {
clu <- t(t(row.names(data[row_order(ht)[[i]],])))
out <- cbind(clu, paste("cluster", i, sep=""))
colnames(out) <- c("GeneID", "Cluster")} else {
clu <- t(t(row.names(data[row_order(ht)[[i]],])))
clu <- cbind(clu, paste("cluster", i, sep=""))
out <- rbind(out, clu)}}
write.table(out, file= "genes_cluster2.txt", sep="\t", quote=F, row.names=FALSE)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 3)
Heatmap(data[1:21], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 11)
setwd("~/Downloads/RNA-seq analysis/BRD4_RNAseq/PCA/PCA MERGE")
data <- read.csv("TPM_zscore.csv",header=T,row.names = 1)
head(data)
data <- read.csv("merge_TPM_PCA.csv",header=T,row.names = 1)
head(data)
data <- read.csv("TPM_zscore2.csv",header=T,row.names = 1)
head(data)
data <- read.csv("TPM_zscore.csv",header=T,row.names = 1)
library(corrplot)
mcor <- cor(data)
corrplot(mcor, col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200), method="shade", shade.col=NA, tl.col="black", tl.srt=45,order="hclust")
data<-na.omit(data)
corrplot(mcor, col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200), method="shade", shade.col=NA, tl.col="black", tl.srt=45,order="hclust")
mcor <- cor(data)
corrplot(mcor, col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200), method="shade", shade.col=NA, tl.col="black", tl.srt=45,order="hclust")
corrplot(corr = mcor, method = "square", type = "full",
col = colorRampPalette(c("#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#F4A582", "#67001F"))(2000), order="hclust",cl.lim = c(0,1))
setwd("~/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/heatmap_TPM")
setwd("~/Downloads/RNA-seq analysis/BRD4_RNAseq/PCA/PCA MERGE")
pdf("correlation.pdf")
corrplot(corr = mcor, method = "square", type = "full",
col = colorRampPalette(c("#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#FFFFFF", "#F4A582", "#67001F"))(2000), order="hclust",cl.lim = c(0,1))
dev.off()
corrplot(mcor, col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200), method="shade", shade.col=NA, tl.col="black", tl.srt=45,order="hclust")
pdf("correlation.pdf")
corrplot(mcor, col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200), method="shade", shade.col=NA, tl.col="black", tl.srt=45,order="hclust")
dev.off()
data.t <- t(data)
sei.d <- dist(data.t)
rd <- hclust(sei.d,method="ward.D2")
plot(rd,hang=-1)
pdf("wardd2.pdf")
plot(rd,hang=-1)
dev.off()
setwd("~/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/heatmap_TPM")
data <- read.csv("UP_TPM.csv",header = T,row.names = 1)
head(data)
data <- read.csv("ACLY-dependent_up_TPM.csv",header = T,row.names = 1)
setwd("~/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/BRD4 rna-seq merge")
data <- read.csv("ACLY-dependent_genes_up_merge_ACLY_BRD4_zscore.csv",header = T,row.names = 1)
heatmap.2(as.matrix(data.z),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
setwd("~/Downloads/RNA-seq analysis/20200703_RNAseq_ACLYKD/All/BRD4 rna-seq merge/zscore(p65含む。数学的に良くない解析)/ACLY-dependent genes")
data <- read.csv("ACLY-dependent_genes_merge.csv",header = T,row.names = 1)
head(data)
heatmap.2(as.matrix(data.z),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
data <- read.csv("ACLY-dependent_genes_up_merge.csv",header = T,row.names = 1)
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 3,)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 4)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 5)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 6)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 8)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 10)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 9)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 9)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 10)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 1)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 1)
Heatmap(data[1:24], name = "z-score",left_annotation = rowAnnotation(foo = anno_block(gp = gpar(fill = 2:4))),clustering_method_columns = 'ward.D2',row_km = 1)
heatmap.2(as.matrix(data.z),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),density.info="none",trace="none",cexRow=0.5, dendrogram="none")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),density.info="none",trace="none",cexRow=0.5, dendrogram="ward.d2")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),density.info="none",trace="none",cexRow=0.5, dendrogram="both")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),density.info="none",trace="none",cexRow=0.5, dendrogram="row")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),density.info="none",trace="none",cexRow=0.5, dendrogram="culumn")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),density.info="none",trace="none",cexRow=0.5, dendrogram="column")
heatmap.2(as.matrix(data.z),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="column")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="none")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="row")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="row")
pdf("a.pdf")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.5, dendrogram="row")
dev.off()
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.1, dendrogram="row")
pdf("a.pdf")
heatmap.2(as.matrix(data),col=colorRampPalette(c("#053061", "#2166AC", "#4393C3", "#92C5DE", "#D1E5F0",
"#FFFFFF", "#FDDBC7", "#F4A582", "#D6604D", "#B2182B", "#67001F"))(200),Colv = NA,density.info="none",trace="none",cexRow=0.1, dendrogram="row")
dev.off()
setwd("/Volumes/HD-PCGU3-A/HD-PCGU3-A/ChIP/summary")
data <- read.csv("ACLY KD rad21 Chip.csv",header=T)
library(beeswarm)
library(ggplot2)
b <- ggplot(data) + geom_boxplot(aes(y = value, x = factor(locus), fill = factor(group)))
b　+ theme_classic()
data <- read.csv("ACLY KD rad21 Chip.csv",header=T)
b <- ggplot(data) + geom_boxplot(aes(y = value, x = factor(locus), fill = factor(group)))
b　+ theme_classic()
b <- ggplot(data) + geom_boxplot(aes(y = value, x = factor(locus), fill = factor(group)),ylim=c(0,5))
b　+ theme_classic()
b <- ggplot(data) + geom_boxplot(aes(y = value, x = factor(locus), fill = factor(group)))
b + ylim=c(0,5)　+ theme_classic()
b scale_y_continuous(breaks=NULL) + ylim(0,10)　+ theme_classic()
b + scale_y_continuous(breaks=NULL) + ylim(0,10)　+ theme_classic()
b + scale_y_continuous(breaks=NULL) + ylim(0,5)　+ theme_classic()
b + scale_y_continuous(breaks=NULL) + ylim(0,4)　+ theme_classic()
pdf("Rad21_ChIP.pdf")
b <- ggplot(data) + geom_boxplot(aes(y = value, x = factor(locus), fill = factor(group)))
b + scale_y_continuous(breaks=NULL) + ylim(0,5)　+ theme_classic()
dev.off()
data <- read.csv("ACLY KD rad21 Chip.csv",header=T)
b <- ggplot(data) + geom_boxplot(aes(y = value, x = factor(locus), fill = factor(group)))
dev.off()
b + scale_y_continuous(breaks=NULL) + ylim(0,5)　+ theme_classic()
pdf("Rad21_ChIP.pdf")
b <- ggplot(data) + geom_boxplot(aes(y = value, x = factor(locus), fill = factor(group)))
b + scale_y_continuous(breaks=NULL) + ylim(0,5)　+ theme_classic()
dev.off()
pdf("Rad21_ChIP.pdf")
b <- ggplot(data) + geom_boxplot(aes(y = value, x = factor(locus), fill = factor(group)))
b + scale_y_continuous(breaks=NULL) + ylim(0,4)　+ theme_classic()
dev.off()
setwd("/Volumes/HD-PCGU3-A/HD-PCGU3-A/qPCR/20201207siBRD4 Rad21 GATA4 KEAP1 NRF2_data")
data <- read.csv("rad21 summary.csv",header = T)
library(beeswarm)
beeswarm(data$IL1A ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,500))
boxplot(data$IL1A ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL1A ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,500))
data <- read.csv("rad21 summary.csv",header = T)
beeswarm(data$IL1A ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,500))
boxplot(data$IL1A ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
data <- read.csv("rad21 summary.csv",header = T)
beeswarm(data$IL1A ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,500))
boxplot(data$IL1A ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL1A ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,300))
boxplot(data$IL1A ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL1B ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,500))
boxplot(data$IL1B ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL1B ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,9000))
boxplot(data$IL1B ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL1B ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,10000))
boxplot(data$IL1B ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL1B ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,10100))
boxplot(data$IL1B ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL8 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,500))
boxplot(data$IL8 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL8 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,200))
boxplot(data$IL8 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL8 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,150))
boxplot(data$IL8 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL8 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,130))
boxplot(data$IL8 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL6 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,130))
boxplot(data$IL6 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL6 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,80))
boxplot(data$IL6 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$IL6 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,70))
boxplot(data$IL6 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$CXCL1 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,70))
boxplot(data$CXCL1 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
beeswarm(data$CXCL1 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,200))
beeswarm(data$CXCL1 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,150))
boxplot(data$CXCL1 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
pdf("IL1A.pdf",width = 3, height = 3)
beeswarm(data$IL1A ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,300))
boxplot(data$IL1A ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("IL1B.pdf",width = 3, height = 3)
beeswarm(data$IL1B ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,10100))
boxplot(data$IL1B ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("IL6.pdf",width = 3, height = 3)
beeswarm(data$IL6 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,70))
boxplot(data$IL6 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("IL8.pdf",width = 3, height = 3)
beeswarm(data$IL8 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,130))
boxplot(data$IL8 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("CXCL1.pdf",width = 3, height = 3)
beeswarm(data$CXCL1 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,150))
boxplot(data$CXCL1 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
data <- read.csv("rad21 summary.csv",header = T)
beeswarm(data$IL1A ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,300))
boxplot(data$IL1A ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
pdf("IL1A.pdf",width = 3, height = 3)
beeswarm(data$IL1A ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,300))
boxplot(data$IL1A ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("IL1B.pdf",width = 3, height = 3)
beeswarm(data$IL1B ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,10100))
boxplot(data$IL1B ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("IL6.pdf",width = 3, height = 3)
beeswarm(data$IL6 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,70))
boxplot(data$IL6 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("IL8.pdf",width = 3, height = 3)
beeswarm(data$IL8 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,130))
boxplot(data$IL8 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("CXCL1.pdf",width = 3, height = 3)
beeswarm(data$CXCL1 ~ data$gene,pch=c(16,16),cex.lab=0.4,cex.main=0.3,cex.axis=0.4, las=1, tck=NA, lwd=1, cex=0.5, yaxs="i", ylab ="TPM",ylim=c(0,150))
boxplot(data$CXCL1 ~ data$gene, xaxt="n", yaxt="n", outline=F, add=T)
dev.off()
pdf("SLC25A1.pdf",width = 3, height = 3)
dev.off()
library(shiny); runApp('Desktop/Rproject/volcanoNavi/test2.R')
runApp('Desktop/Rproject/volcanoNavi/test2.R')
runApp('Desktop/Rproject/volcanoNavi/test2.R')
runApp('Desktop/Rproject/volcanoNavi/test2.R')
runApp('Desktop/Rproject/volcanoNavi/test2.R')
runApp('Desktop/Rproject/volcanoNavi/test2.R')
runApp('Desktop/Rproject/volcanoNavi/test2.R')
install.packages("httr")
install.packages("httr")
library(shiny); runApp('Desktop/Rproject/volcanoNavi/test.R')
runApp('Desktop/Rproject/volcanoNavi/test.R')
library(httr)
runApp('Desktop/Rproject/volcanoNavi/test.R')
library(shiny); runApp('Desktop/Rproject/volcanoNavi/test.R')
runApp('Desktop/Rproject/Automate_shiny/Automate_webApp.R')
runApp('Desktop/Rproject/Automate_shiny/Automate_webApp.R')
runApp('Desktop/Rproject/Automate_shiny/Automate_webApp.R')
runApp('test.R')
runApp('Desktop/Rproject/Automate_shiny/Automate_webApp.R')
runApp('Desktop/Rproject/Automate_shiny/Automate_webApp.R')
runApp('Desktop/Rproject/Automate_shiny/Automate_webApp.R')
runApp('Desktop/Rproject/Automate_shiny/Automate_webApp.R')
runApp('Desktop/Rproject/volcanoNavi/test.R')
library(shiny); runApp('Desktop/Rproject/volcanoNavi/test.R')
Unique_ID
label
a <- ("a", "b")
a <- c("a", "b")
as.data.frame(a, row.names = a)
as.data.frame(a, row.names = Unique_ID)
runApp('Desktop/Rproject/volcanoNavi/test.R')
runApp('Desktop/Rproject/volcanoNavi/test.R')
runApp('Desktop/Rproject/volcanoNavi/test.R')
qvalue <- c(NA, NA,NA,2)
group <- as.data.frame(qvalue, row.names = c("a", "b", "c", "d"))
group
group[sort(group$qvalue, decreasing = F, index=T)$ix,]
qvalue2 <- c(6, 1,3,2)
group2 <- as.data.frame(qvalue2, row.names = c("a", "b", "c", "d"))
group2[sort(group2$qvalue2, decreasing = F, index=T)$ix,]
runApp('Desktop/Rproject/volcanoNavi/test.R')
output$GOIheatmap <- renderPlot({
if(is.null(d_row_count_matrix())){
return(NULL)
}else{
if(!is.null(input$GOI)){
data <- data_degcount()
count <- deg_norm_count()
if(str_detect(rownames(data)[1], "ENS")){
if(length(grep("SYMBOL", colnames(data))) != 0){
count <- count[, - which(colnames(count) == "SYMBOL")]
}
}
collist <- factor(gsub("\\_.+$", "", colnames(count)))
vec <- c()
for (i in 1:length(unique(collist))) {
num <- length(collist[collist == unique(collist)[i]])
vec <- c(vec, num)
}
Cond_1 <- vec[1]
Cond_2 <- vec[2]
if(str_detect(rownames(count)[1], "ENS")){
if(input$Species != "not selected"){
Unique_ID <- input$GOI
label_data <- as.data.frame(Unique_ID, row.names = Unique_ID)
data2 <- merge(data, label_data, by="Unique_ID")
rownames(data2) <- data2$Unique_ID
data2 <- data2[, - which(colnames(data2) == "Row.names")]
}else{
Row.names <- input$GOI
label_data <- as.data.frame(Row.names, row.names = Row.names)
data2 <- merge(data, label_data, by="Row.names")
rownames(data2) <- data2$Row.names}
}else{
Row.names <- input$GOI
label_data <- as.data.frame(Row.names, row.names = Row.names)
data2 <- merge(data, label_data, by="Row.names")
rownames(data2) <- data2$Row.names
}
if(is.null(data2)){
ht <- NULL
}else{
data.z <- genescale(data2[,8:(7 + Cond_1 + Cond_2)], axis=1, method="Z")
ht <- Heatmap(data.z, name = "z-score",column_order = colnames(data.z),
clustering_method_columns = 'ward.D2',
show_row_names = T, show_row_dend = F)
}
suppressWarnings(print(ht))
}
}
})
runApp('Desktop/Rproject/volcanoNavi/test.R')
runApp('Desktop/Rproject/volcanoNavi/test.R')
library(shiny); runApp('Desktop/Rproject/volcanoNavi/test.R')
runApp('Desktop/Untitled.R')
runApp('Desktop/Rproject/volcanoNavi/test.R')
runApp('Desktop/Rproject/volcanoNavi/test.R')
library(BiocManager)
options(repos = BiocManager::repositories())
shiny::runApp('Desktop/Rproject/RNAseqChef')
runApp('Desktop/Rproject/RNAseqChef')
runApp('Desktop/Rproject/RNAseqChef')
runApp('Desktop/Rproject/RNAseqChef')
shiny::runApp('Desktop/Rproject/RNAseqChef')
runApp('Desktop/Rproject/RNAseqChef')
runApp('Desktop/Rproject/RNAseqChef')
runApp('Desktop/Rproject/RNAseqChef')
library(BiocManager)
options(repos = BiocManager::repositories())
library(shiny); runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
runApp('Untitled.R')
shiny::runApp('Desktop/Rproject/RNAseqChef')
